//
//  ___FILENAME___
//  ___PROJECTNAME___
//
//  Created by ___FULLUSERNAME___ on ___DATE___.
//  Copyright (c) ___YEAR___ ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import Foundation
import RxSwift

class ___VARIABLE_moduleName___ViewModel: BaseViewModel {
    
    let observableData: Variable<___VARIABLE_moduleName___UIData> = Variable<___VARIABLE_moduleName___UIData>( ___VARIABLE_moduleName___UIData() )
    
    private var uidata: ___VARIABLE_moduleName___UIData {
        return observableData.value
    }
    
    let useCase: ___VARIABLE_moduleName___UseCase = ___VARIABLE_moduleName___UseCase()
    
    required init(navigator: Navigator?) {
        super.init(navigator: navigator)
        prepareObserver()
    }
    
    func prepareObserver() {
        self.sub(useCase.observableData.asObservable().subscribe(
            onNext: { [weak self] uidata in
                self?.observableData.value = uidata
            }
        ))
    }
    
    func getData() {
        useCase.request___VARIABLE_moduleName___Data()
    }
    
    func resetView() {
        self.observableData.value = ___VARIABLE_moduleName___UIData()
    }
    
}

